- name: Install vault servers
  become: yes
  hosts: cc
  vars_prompt:

  - name: "initialize_cluster"
    prompt: "Do you want to initialize the cluster [Yes/No]? [No] "
    default: "no"

  tasks:
  - name: Include vars of ACL agent_token into the 'agent_token'
    include_vars:
     file: "~/.agent_token"
     name: agenttoken

# Create vault user and group
  - name: Add group for vault
    group:
     name: vault
     state: present

  - name: Add user for vault
    user:
     name: vault
     groups: vault
     shell: /sbin/nologin
     state: present
     append: yes
     comment: "vault account"

# Create required directories
  - name: create required directories
    file:
     path: "{{ item }}"
     state: directory
     owner: vault
     group: vault
    with_items:
      - /etc/vault
      - /vault-data
      - /logs/vault/

# Copy the binary, vault.service & certs to servers
  - name: Copy config files and certs
    copy: src={{ item.src }} dest={{ item.dest }} owner=root mode=0755
    with_items:
     - { src: 'files/vault.service',  dest: '/etc/systemd/system/vault.service' }
     - { src: 'files/certs.pem', dest: '/etc/vault/certs.pem'}
     - { src: 'files/vaultkey.pem', dest: '/etc/vault/vaultkey.pem'}
     - { src: 'files/vault_1.4.2_linux_amd64', dest: '/usr/bin/vault' }
     - { src: 'files/admin_policy.hcl', dest: '/etc/vault/admin_policy.hcl' }
     - { src: 'files/dev_policy.hcl', dest: '/etc/vault/dev_policy.hcl' }
     - { src: 'files/ldap2021.pem', dest: '/etc/vault/ldap2021.pem' }
     - { src: 'files/askarta-ASKARTAPKI-CA01-CA.crt', dest: '/usr/local/share/ca-certificates/askarta-ASKARTAPKI-CA01-CA.crt' }
    notify: restart vault

  - name: Copy vault config.json to servers
    template:
     src: templates/config.json.j2
     dest: "/etc/vault/config.json"

# Update trusted root certificates
  - name: Update trusted root certificates
    shell: "update-ca-certificates"

  - name: Add env export to .bashrc file
    become: no
    lineinfile:
      path: ~/.bashrc
      line: export VAULT_ADDR=https://vault.askarta.local:8200
      create: yes

# Update hosts file if DNS is not used to resolve clusters FQDN
  - name: Update hosts file
    lineinfile:
      path: /etc/hosts
      line: "{{ ansible_default_ipv4.address }} vault.askarta.local"
      create: yes

# Vault -autocomplete-install
  - name: Install autocomplete-install
    become: no
    shell: "vault -autocomplete-install"
    ignore_errors: yes

# Restart vault
  - name: Restart vault
    service:
      name: vault
      state: restarted

# Initialize the cluster if the initialize_cluster value is yes
  - name: Initialize the cluster using shell module
    environment:
     VAULT_ADDR: https://vault.askarta.local:8200
    shell: "vault operator init"
    run_once: true
    register: vault_init
    when: initialize_cluster == "yes"

  - name: Print returned vault_init json dictionary
    debug:
     var: vault_init.stdout_lines
    run_once: true
# Copy cluster tokens to file (make sure you secure these)
  - name: copy the vault_init output to a local file
    become: no
    copy:
     content: '{{ vault_init.stdout_lines }}'
     dest: "~/.vault_init"
    delegate_to: localhost
    when: initialize_cluster == "yes"

# Restart and enable vault service at boot up
  handlers:
   - name: restart vault
     service:
      name: vault
      state: restarted
      enabled: yes
