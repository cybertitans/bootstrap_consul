# Vault must be installed, unsealed  and required files already uploaded
# This playbook assumes you used installvault.yml first & preloaded all required files.
# It configures dynamic mysql secrets, & ldap
# Creates basic policies for users/devteam (AD groups are via DLAP)
# Also adds cert to trusted store & for ldaps
# Select only the primary vault server

- name: Configure vault
  hosts: consulclient1

  tasks:
# Load the master_token created in the build/init process into "vault_token"
   - name: Load the master_token created in the build/init process
     become: no
     shell: cat ~/.vault_init | grep -e 'Initial Root Token:' | gawk -F '"' '{print $14}' | awk '{print $4}'
     register: vault_token
     delegate_to: localhost

   - name: Print returned vault_token and make token as var
     debug:
      var: vault_token.stdout

# Check if Vault is sealed or not before running the playbook
   - name: Check if Vault is unsealed
     environment:
      VAULT_ADDR: "{{ vault_add }}"
     command: vault status
     register: vault_status_result
     ignore_errors: True

# Fail if sealed
   - name: Print returned vault_status_results and fail if sealed
     fail:
      msg: "FAILED! - Please unseal Vault and then rerun this playbook"
     when: vault_status_result.failed is true

# Enable mysql secrets engine
   - name: Enable mysql secrets engine
     environment:
       VAULT_ADDR: "{{ vault_add }}"
       VAULT_TOKEN: "{{ vault_token.stdout }}"
     command: "{{ item }}"
     with_items:
# Enable mysql secrets engine for temp admin & readonly accounts
     - vault secrets enable mysql
     - vault write mysql/config/connection connection_url="root:root@tcp(192.168.50.180:3306)/"
     - vault write mysql/config/lease lease=5m lease_max=12h
     - vault write {%raw%} mysql/roles/readonly sql="CREATE USER '{{name}}'@'%' IDENTIFIED BY '{{password}}';GRANT SELECT ON *.* TO '{{name}}'@'%';"{%endraw%}
     - vault write {%raw%} mysql/roles/admin sql="CREATE USER '{{name}}'@'%' IDENTIFIED BY '{{password}}';GRANT ALL ON *.* TO '{{name}}'@'%';"{%endraw%}

# Enable transit secrets engine
     - vault secrets enable transit
# Create a named encryption key for transit secret engine
     - vault write -f transit/keys/enc-key
# Enable LDAP and create groups plus policies (dev and admin)
     - vault auth enable ldap
     - vault policy write admin_policy /etc/vault/admin_policy.hcl
     - vault write auth/ldap/groups/users policies=admin_policy
     - vault policy write dev_policy /etc/vault/dev_policy.hcl
     - vault write auth/ldap/groups/devteam policies=dev_policy
     - vault write auth/ldap/config url="ldaps://askartadc01.askarta.local" upndomain="askarta.local"
          userattr=sAMAccountName userdn="OU=HO,DC=askarta,DC=local"
          groupdn="OU=HO,DC=askarta,DC=local" use_token_groups=true
          certificate=@/etc/vault/ldap2021.pem
